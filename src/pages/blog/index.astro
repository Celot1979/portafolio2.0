---
import Layout from '../../layouts/Layout.astro';
import { db } from '../../lib/db';
import { marked } from 'marked'; // Importar marked

let posts = [];
let error = null;

try {
  const result = await db.query('SELECT * FROM blog_posts ORDER BY created_at DESC;');
  posts = result.rows;
  console.log("Posts obtenidos:", posts);
} catch (e) {
  error = e.message;
  console.error("Error al obtener posts:", error);
}

// Función para crear un extracto sin cortar HTML
function createExcerpt(htmlContent, maxLength = 150) {
  // Primero, eliminamos las etiquetas HTML para medir la longitud del texto real
  const textOnly = htmlContent.replace(/<[^>]+>/g, '');
  if (textOnly.length <= maxLength) {
    return htmlContent; // Si es corto, devolvemos el HTML completo
  }

  // Si es largo, truncamos el texto y añadimos "..."
  const truncatedText = textOnly.substring(0, maxLength);
  return `<p>${truncatedText}...</p>`; // Devolvemos solo el texto truncado como un párrafo
}
---

<Layout title="Blog - Mi Portafolio">
  <main>
    <h1>Últimas Entradas del Blog</h1>
    {error ? (
      <p>Error al cargar las entradas del blog: {error}</p>
    ) : (
      <div class="blog-list">
        {
          posts.length > 0 ? (
            posts.map((post) => {
              // Primero, procesamos el Markdown a HTML
              const fullHtmlContent = marked(post.content || '');
              // Luego, creamos un extracto a partir de ese HTML
              const excerptHtml = createExcerpt(fullHtmlContent);

              return (
                <article>
                  {post.image_url && <img src={post.image_url} alt={post.title} class="post-image" />}
                  <h2>{post.title}</h2>
                  <p>Fecha: {post.created_at ? new Date(post.created_at).toLocaleDateString() : 'Fecha no disponible'}</p>
                  <div class="post-excerpt" set:html={excerptHtml} />
                  <a href={`/blog/${post.id}`} class="read-more-button">Leer más</a>
                </article>
              );
            })
          ) : (
            <p>No hay entradas de blog disponibles.</p>
          )
        }
      </div>
    )}
  </main>
</Layout>

<style>
  .blog-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }
  .blog-list article {
    background-color: #1a1a1a;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Para empujar el botón al final */
    overflow-wrap: break-word; /* Para forzar el corte de palabras largas */
  }
  .blog-list article:hover {
    transform: translateY(-5px);
  }
  .blog-list article h2 {
    margin-top: 0;
  }
  .blog-list article h2 a {
    color: #00bcd4;
    text-decoration: none;
  }
  .blog-list article h2 a:hover {
    text-decoration: underline;
  }
  .post-image {
    width: 100%;
    height: 200px; /* Altura fija para las imágenes */
    object-fit: cover; /* Asegura que la imagen cubra el área sin distorsionarse */
    border-radius: 4px;
    margin-bottom: 1rem;
  }
  .read-more-button {
    display: inline-block;
    background-color: #00bcd4; /* Color de acento */
    color: white;
    padding: 0.8rem 1.5rem;
    border-radius: 5px;
    text-decoration: none;
    text-align: center;
    margin-top: 1rem; /* Espacio entre el texto y el botón */
    transition: background-color 0.3s ease;
  }
  .read-more-button:hover {
    background-color: #0097a7; /* Tono más oscuro al pasar el ratón */
  }
</style>
