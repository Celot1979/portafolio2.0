---
import Layout from '../../layouts/Layout.astro';
import { db } from '../../lib/db';

// --- Datos de la Base de Datos (Tus proyectos destacados) ---
let projects = [];
let dbError = null;
try {
  const result = await db.query(`
    SELECT 
      title,
      description,
      url,
      image_url,
      LOWER(REPLACE(title, ' ', '-')) as slug
    FROM repositories 
    ORDER BY created_at DESC;
  `);
  projects = result.rows;
} catch (e) {
  dbError = e.message;
  console.error("Error al obtener proyectos de la BD:", e);
}

// --- Datos de la API de GitHub (Análisis de tecnologías) ---
let techCounts = {};
let githubError = null;
try {
  const response = await fetch('https://api.github.com/users/Celot1979/repos?per_page=100');
  if (!response.ok) {
    throw new Error(`Error de GitHub API: ${response.status}`);
  }
  const repos = await response.json();
  
  // Contar las tecnologías
  techCounts = repos.reduce((acc, repo) => {
    if (repo.language) { // Solo contar si el lenguaje no es null
      acc[repo.language] = (acc[repo.language] || 0) + 1;
    }
    return acc;
  }, {});

  // Ordenar tecnologías por popularidad
  const sortedTechs = Object.entries(techCounts).sort(([, a], [, b]) => b - a);
  techCounts = Object.fromEntries(sortedTechs);

} catch (e) {
  githubError = e.message;
  console.error("Error al obtener repos de GitHub:", e);
}
---

<Layout title="Proyectos - Mi Portafolio">
  <main>
    <h1>Mis Proyectos</h1>

    <div class="projects-layout">
      <aside class="tech-column">
        <h2>Tecnologías Destacadas</h2>
        {githubError ? (
          <p>Error al cargar tecnologías.</p>
        ) : (
          <ul class="tech-list">
            {Object.entries(techCounts).map(([tech, count]) => (
              <li>
                <span class="tech-name">{tech}</span>
                <span class="tech-count">{count} ★</span>
              </li>
            ))}
          </ul>
        )}
      </aside>

      <div class="project-list-container">
        {dbError ? (
          <p>Error al cargar los proyectos: {dbError}</p>
        ) : (
          <div class="project-list">
            {
              projects.length > 0 ? (
                projects.map((project, index) => (
                  <article>
                    {project.image_url && <img src={project.image_url} alt={project.title} class="project-image" />}
                    <h2><a href={`/proyectos/${project.slug}`}>{project.title}</a></h2>
                    <p>{project.description}</p>
                    {project.url && <a href={project.url} target="_blank" rel="noopener noreferrer" class="repo-link">Ver en GitHub</a>}
                  </article>
                ))
              ) : (
                <p>No hay proyectos destacados disponibles.</p>
              )
            }
          </div>
        )}
      </div>
    </div>
  </main>
</Layout>

<style>
  .projects-layout {
    display: grid;
    grid-template-columns: 280px 1fr; /* Ancho fijo para tecnologías, resto para proyectos */
    gap: 2rem;
    margin-top: 2rem;
  }

  .tech-column {
    background-color: #1a1a1a;
    padding: 1.5rem;
    border-radius: 8px;
    height: fit-content; /* Para que no se estire más de lo necesario */
  }

  .tech-column h2 {
    margin-top: 0;
    color: #00bcd4;
    border-bottom: 2px solid #00bcd4;
    padding-bottom: 0.5rem;
  }

  .tech-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .tech-list li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.8rem;
    font-size: 1.1rem;
  }

  .tech-name {
    font-weight: bold;
  }

  .tech-count {
    color: #ffc107; /* Color dorado para el contador y la estrella */
    font-weight: bold;
    font-size: 1.1rem;
  }

  .project-list-container {
    /* Contenedor para la lista de proyectos */
  }

  .project-list {
    display: grid;
    grid-template-columns: 1fr; /* 1 columna por defecto para móviles */
    gap: 2rem;
  }

  @media (min-width: 768px) {
    .project-list {
      grid-template-columns: repeat(2, 1fr); /* 2 columnas para tablets */
    }
  }

  @media (min-width: 1024px) {
    .project-list {
      grid-template-columns: repeat(3, 1fr); /* 3 columnas para escritorio */
    }
  }
  .project-list article {
    background-color: #1a1a1a;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;
  }
  .project-list article:hover {
    transform: translateY(-5px);
  }
  .project-list article h2 {
    margin-top: 0;
    font-size: 1.4rem;
  }
  .project-list article h2 a {
    color: #00bcd4;
    text-decoration: none;
  }
  .project-list article h2 a:hover {
    text-decoration: underline;
  }
  .project-list article p {
    flex-grow: 1; /* Empuja el botón hacia abajo */
  }
  .project-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 4px;
    margin-bottom: 1rem;
  }
  .repo-link {
    display: inline-block;
    margin-top: 1rem;
    padding: 0.5rem 1rem;
    background-color: #007bff;
    color: white;
    text-decoration: none;
    border-radius: 5px;
    transition: background-color 0.3s ease;
    align-self: flex-start; /* Alinea el botón a la izquierda */
  }
  .repo-link:hover {
    background-color: #0056b3;
  }

  /* Media Query para pantallas más pequeñas */
  @media (max-width: 768px) {
    .projects-layout {
      grid-template-columns: 1fr; /* Apilar las columnas */
    }
    .tech-column {
      margin-bottom: 2rem;
    }
  }
</style>
