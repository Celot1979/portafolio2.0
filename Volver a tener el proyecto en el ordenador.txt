### Pasos para Clonar e Instalar el Proyecto (Después de un Formateo)

1.  **Clonar el Repositorio:**
    *   Asegúrate de tener Git instalado en tu nuevo sistema.
    *   Clona tu repositorio desde GitHub (o donde lo tengas alojado):
        ```bash
        git clone <URL_DE_TU_REPOSITORIO>
        cd portafolio2.0 # O el nombre de tu carpeta
        ```

2.  **Instalar Node.js y npm:**
    *   Tu proyecto está construido con Astro y Node.js. Asegúrate de tener una versión compatible de Node.js y npm instalada. Puedes usar `nvm` (Node Version Manager) para gestionar versiones fácilmente.

3.  **Instalar Dependencias de Node.js:**
    *   Una vez dentro del directorio del proyecto, instala todas las dependencias listadas en `package.json`:
        ```bash
        npm install
        ```

4.  **Configurar la Base de Datos PostgreSQL:**
    *   **Instala PostgreSQL:** Si no lo tienes, instala PostgreSQL en tu sistema.
    *   **Crea la Base de Datos:** Crea una nueva base de datos para tu proyecto.
    *   **Configura las Tablas:** Necesitarás ejecutar los scripts SQL para crear las tablas `blog_posts` y `repositories` (y cualquier otra tabla que uses). Estos scripts no están en el repositorio, así que asegúrate de tenerlos guardados aparte o de generarlos desde tu base de datos actual.
        *   **Tabla `blog_posts`:** Debe tener al menos `id`, `title`, `content`, `image_url`, `seo_description`, `created_at`, `updated_at`.
        *   **Tabla `repositories`:** Debe tener al menos `id`, `title`, `url`, `image_url`, `description`.
    *   **Datos Iniciales (Opcional):** Si tienes datos importantes en tu base de datos actual, considera hacer un `dump` (copia de seguridad) y restaurarlo en la nueva base de datos.

5.  **Configurar Variables de Entorno (`.env`):**
    *   Crea un archivo llamado `.env` en la raíz de tu proyecto (al mismo nivel que `package.json`).
    *   Este archivo debe contener las siguientes variables:
        ```
        DATABASE_URL="postgresql://usuario:contraseña@host:puerto/nombre_base_datos"
        ADMIN_USERNAME="tu_nombre_de_usuario_admin"
        ADMIN_PASSWORD="tu_contraseña_admin"
        VERCEL_DEPLOY_HOOK_URL="tu_url_de_deploy_hook_si_la_usas" # Opcional, si despliegas en Vercel
        ```
    *   Asegúrate de que los valores de `DATABASE_URL`, `ADMIN_USERNAME` y `ADMIN_PASSWORD` sean correctos para tu configuración.

6.  **Instalar `jq` (Herramienta de Línea de Comandos):**
    *   Nuestro script `crear-post.sh` utiliza `jq` para procesar JSON. `jq` es una herramienta de sistema, no una dependencia de Node.js.
    *   Instálalo en tu sistema operativo:
        *   **Debian/Ubuntu:** `sudo apt-get install jq`
        *   **macOS:** `brew install jq`
        *   **Windows:** Puedes descargarlo desde su sitio oficial o usar `scoop install jq` / `choco install jq`.

7.  **Iniciar el Servidor de Desarrollo:**
    *   Una vez que todo lo anterior esté configurado, puedes iniciar tu servidor de desarrollo:
        ```bash
        npm run dev
        ```

8.  **Verificar el Script `crear-post.sh`:**
    *   Asegúrate de que el script tenga permisos de ejecución:
        ```bash
        chmod +x crear-post.sh
        ```
    *   Luego, puedes ejecutarlo y probar todas las opciones:
        ```bash
        ./crear-post.sh
        ```
